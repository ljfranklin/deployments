---
shared:
  - &failure-alert
    put: slack-alert
    params:
      silent: true
      icon_emoji: ":interrobang:"
      text: |
        *The <$ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME> job failed!*
  - &success-alert
    put: slack-alert
    params:
      silent: true
      icon_emoji: ":rocket:"
      text: |
        *The <$ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME> job passed!*
  - &update-assets-alert
    put: slack-alert
    params:
      silent: true
      icon_url: "https://avatars1.githubusercontent.com/u/7809479?v=3&s=200"
      text: |
        *A new version of Concourse is available! Run 'bosh deploy' to upgrade.*

jobs:
  - name: update-director
    serial_groups: [deploy]
    plan:
      - do:
        - in_parallel:
          - get: ssl-certs
            trigger: true
          - get: deployments-src
          - get: bosh-cli
          - get: director-vars-store
          - get: bosh-deployment
        - put: terraform
          params:
            env_name: lyle-deployments
            terraform_source: deployments-src/terraform/
        - task: update-director
          file: deployments-src/ci/setup-env/tasks/deploy-director.yml
          output_mapping: {output-src: updated-deployments-src}
          params:
            GCP_CREDENTIALS_JSON: ((gce_credentials_json))
          ensure:
            do:
            - task: commit-state-file
              file: deployments-src/ci/setup-env/tasks/git-commit.yml
              input_mapping: {input-src: updated-deployments-src}
              output_mapping: {output-src: committed-deployments-src}
              params:
                GIT_ADD_ARGS: ./bosh/director-state.json
                GIT_COMMIT_MSG: ":airplane: Auto-commit: Updating Director deployment state"
                GIT_COMMIT_USERNAME: friendly-ci
                GIT_COMMIT_EMAIL: ((git_commit_email))
                GIT_SUCCEED_ON_NO_CHANGES: true
            - put: deployments-src
              params:
                repository: committed-deployments-src/
                rebase: true
            - put: director-vars-store
              params:
                file: updated-director-vars-store/vars-store.yml
        on_success: *success-alert
        on_failure: *failure-alert

  - name: renew-certs
    serial_groups: [deploy]
    plan:
      - do:
        - in_parallel:
          - get: deployments-src
          - get: ssl-certs
          - get: sunday-night
            trigger: true
        - task: update-certs
          file: deployments-src/ci/setup-env/tasks/update-certs.yml
          input_mapping: {input-src: ssl-certs}
          output_mapping: {output-src: updated-ssl-certs}
          params:
            CLOUDFLARE_EMAIL:   ((cloudflare_email))
            CLOUDFLARE_API_KEY: ((cloudflare_token))
            CLOUDFLARE_DOMAINS: ((cloudflare_domains))
        - task: commit-certs
          file: deployments-src/ci/setup-env/tasks/git-commit.yml
          input_mapping: {input-src: updated-ssl-certs}
          output_mapping: {output-src: committed-ssl-certs}
          params:
            GIT_ADD_ARGS: .
            GIT_COMMIT_MSG: ":airplane: Auto-commit: Updating SSL Certs"
            GIT_COMMIT_USERNAME: friendly-ci
            GIT_COMMIT_EMAIL: ((git_commit_email))
            GIT_SUCCEED_ON_NO_CHANGES: true
        - put: ssl-certs
          params:
            repository: committed-ssl-certs/
            rebase: true
        on_success: *success-alert
        on_failure: *failure-alert

  - name: curl-websites
    serial_groups: [deploy]
    build_logs_to_retain: 2000 # ~7 days
    plan:
      - do:
        - get: every_5m
          trigger: true
        - get: deployments-src
        - task: curl-websites
          file: deployments-src/ci/setup-env/tasks/curl-websites.yml
          params:
            URLS_TO_CURL: ((urls_to_curl))
        on_failure: *failure-alert
        attempts: 5

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: latest
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
  - name: gcs
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
  - name: deployments-src
    type: git
    source:
      uri: git@github.com:ljfranklin/deployments.git
      private_key: ((deployments_github_deploy_key))
      branch: master
  - name: ssl-certs
    type: git
    source:
      uri: git@github.com:ljfranklin/ssl_certs.git
      private_key: ((ssl_certs_github_deploy_key))
      branch: master
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
  - name: bosh-cli
    type: s3
    source:
      bucket: bosh-cli-artifacts
      regexp: bosh-cli-(\d+\.\d+\.\d+)-linux-amd64
  - name: terraform
    type: terraform
    source:
      backend_type: s3
      backend_config:
        bucket: ((deployments_bucket_name))
        region: us-east-1
        key: terraform.tfstate
        access_key: ((storage_access_key))
        secret_key: ((storage_secret_key))
        workspace_key_prefix: terraform
        endpoint: https://storage.googleapis.com
        skip_credentials_validation: true
      vars:
        projectid: ((gce_project_id))
        gce_credentials_json: ((gce_credentials_json))
        deployments_bucket_name: ((deployments_bucket_name))
        cloudflare_email: ((cloudflare_email))
        cloudflare_token: ((cloudflare_token))
        cloudflare_zone_id: ((cloudflare_zone_id))
  - name: director-vars-store
    type: gcs
    source:
      bucket: ((deployments_bucket_name))
      json_key: ((gce_credentials_json))
      versioned_file: director/vars-store.yml
  - name: every_5m
    type: time
    source:
      interval: 5m
  - name: sunday-night
    type: time
    source:
      location: US/Pacific
      start: 12:00 AM
      stop: 2:00 AM
      days: [Sunday]
  - name: slack-alert
    type: slack-notification
    source:
      url: ((slack_integration_url))
